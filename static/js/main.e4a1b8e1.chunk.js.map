{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","buttons","title","value","Alphabet","className","Length","Reverse","App","useState","sortField","setSortField","isReversed","setIsReversed","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","map","button","type","cn","onClick","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,4EAbQC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,gBAAAA,E,mBAAAA,M,KAYL,IAAME,EAAoB,CACxB,CACEC,MAAO,sBACPC,MAAOJ,EAASK,SAChBC,UAAW,WAEb,CACEH,MAAO,iBACPC,MAAOJ,EAASO,OAChBD,UAAW,cAEb,CACEH,MAAO,UACPC,MAAOJ,EAASQ,QAChBF,UAAW,eAyBFG,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAzBiB,SACvBA,EACAJ,EACAE,GAEA,IAAMG,EAAa,YAAOD,GAE1B,OAAQJ,GACN,KAAKX,EAASK,SACZW,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzD,MACF,KAAKnB,EAASO,OACZS,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAM9D,OAAOR,EAAaG,EAAcM,UAAYN,EAOhCO,CAAiBtB,EAAiBU,EAAWE,GAO3D,OACE,sBAAKP,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACGJ,EAAQsB,KAAI,SAAAC,GAAM,OACjB,wBAEEC,KAAK,SACLpB,UAAWqB,IAAG,SAAUF,EAAOnB,UAAW,CACxC,WACEmB,EAAOrB,QAAUJ,EAASQ,SACrBK,EACDY,EAAOrB,QAAUO,IAEzBiB,QAAS,WACHH,EAAOrB,QAAUJ,EAASQ,QAC5BM,GAAeD,GAEfD,EAAaa,EAAOrB,QAb1B,SAiBGqB,EAAOtB,OAhBHsB,EAAOrB,WAoBdO,GAAaE,IACb,wBACEa,KAAK,SACLpB,UAAU,4BACVsB,QAlCU,WAClBhB,EAAa,IACbE,GAAc,IA6BR,sBAUJ,6BACGC,EAAMS,KAAI,SAAAK,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCrHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e4a1b8e1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alphabet = 'alphabet',\n  Length = 'length',\n  Reverse = 'reverse',\n}\n\ninterface Button {\n  title: string,\n  value: string,\n  className: string,\n}\n\nconst buttons: Button[] = [\n  {\n    title: 'Sort alphabetically',\n    value: SortType.Alphabet,\n    className: 'is-info',\n  },\n  {\n    title: 'Sort by length',\n    value: SortType.Length,\n    className: 'is-success',\n  },\n  {\n    title: 'Reverse',\n    value: SortType.Reverse,\n    className: 'is-warning',\n  },\n];\n\nconst getPreparedGoods = (\n  goods: string[],\n  sortField: SortType[keyof SortType],\n  isReversed: boolean,\n): string[] => {\n  const preparedGoods = [...goods];\n\n  switch (sortField) {\n    case SortType.Alphabet:\n      preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    case SortType.Length:\n      preparedGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n    default:\n      break;\n  }\n\n  return isReversed ? preparedGoods.reverse() : preparedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const goods = getPreparedGoods(goodsFromServer, sortField, isReversed);\n\n  const handleReset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        {buttons.map(button => (\n          <button\n            key={button.value}\n            type=\"button\"\n            className={cn('button', button.className, {\n              'is-light':\n                button.value === SortType.Reverse\n                  ? !isReversed\n                  : button.value !== sortField,\n            })}\n            onClick={() => {\n              if (button.value === SortType.Reverse) {\n                setIsReversed(!isReversed);\n              } else {\n                setSortField(button.value);\n              }\n            }}\n          >\n            {button.title}\n          </button>\n        ))}\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}